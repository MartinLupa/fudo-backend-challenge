# Rate limiting
limit_req_zone global zone=perip:30m rate=100r/s;

# Upstream definitions
upstream products_api {
    ip_hash; # Load balancing strategy for sticky sessions.
    server host.docker.internal:${UPSTREAM_SERVER_PORT};
    # Add more servers here for load balancing if needed
}

server {
    listen       ${API_GATEWAY_PORT};
    listen  [::]:${API_GATEWAY_PORT};
    server_name  localhost;

    # Products API endpoint
    location /api/login {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        limit_req zone=perip burst=20 nodelay;
        limit_req_status 429;

        # Proxy settings
        proxy_pass http://products_api/login;
    }

    location /api/authors {
        proxy_pass_header Cache-Control;
        proxy_pass_header Expires;

        proxy_pass http://products_api/authors;
    }

    location /api/openapi.yaml {
        proxy_pass_header Cache-Control;
        proxy_pass_header Expires;
        
        proxy_pass http://products_api/openapi.yaml;
    }

    location /api/products {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        limit_req zone=perip burst=20 nodelay;
        limit_req_status 429;

        # Proxy settings
        proxy_pass http://products_api/products;
    }
}